version: '3.9'

services:
  app:
    image: ${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:latest # 사용할 이미지 이름
    build:
      context: . # Dockerfile이 위치한 디렉토리
      dockerfile: Dockerfile # 빌드에 사용할 Dockerfile
    ports:
      - "8080:8080" # 호스트와 컨테이너의 포트 매핑
    environment:
      DOCKER_USERNAME: ${DOCKER_USERNAME}
      DOCKER_PASSWORD: ${DOCKER_PASSWORD}
      DB_ENDPOINT: ${DB_ENDPOINT}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET: ${AWS_BUCKET}
      AWS_URL: ${AWS_URL}
      TZ: ${TZ}
      DOCKER_IMAGE_NAME: ${DOCKER_IMAGE_NAME}
    networks:
      - playhive-net
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    restart: always

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xms256M -Xmx512M"
    depends_on:
      - zookeeper
    restart: always
